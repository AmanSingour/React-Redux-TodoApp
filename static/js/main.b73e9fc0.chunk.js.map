{"version":3,"sources":["actions/addTodo.js","components/InputField/InputField.js","app/AddTodo/AddTodo.js","components/Todo/Todo.js","app/ShowTodo/ShowTodo.js","actions/deleteTodo.js","actions/completeTask.js","App.js","serviceWorker.js","reducers/todos.js","reducers/index.js","index.js","components/Todo/Todo.module.css"],"names":["id","classNameHolder","addTodo","task","today","Date","bgColor","Math","floor","random","length","type","payload","ID","completed","time","toLocaleTimeString","hour12","hour","minute","date","toLocaleDateString","year","month","day","bgcolor","useStyles","makeStyles","theme","root","padding","display","alignItems","width","borderColor","border","input","marginLeft","spacing","flex","iconButton","divider","height","margin","InputField","props","React","useState","checked","setChecked","useEffect","classes","setTask","isValid","setValid","Grow","in","style","transformOrigin","timeout","Paper","elevation","className","InputBase","label","placeholder","inputProps","onChange","e","event","value","target","isNaN","match","validate","Tooltip","TransitionComponent","Zoom","title","aria-label","arrow","IconButton","onClick","Divider","orientation","color","disabled","onSubmit","preventDefault","handleSubmit","fontSize","button","AddTodo","dispatch","useDispatch","success","setSuccess","error","setError","handleClose","reason","Container","component","Snackbar","anchorOrigin","vertical","horizontal","open","err","handleOnSubmit","autoHideDuration","onClose","Alert","severity","themes","card","minWidth","Todo","Card","variant","background","CardHeader","subheader","CardActions","Button","size","key","onComplete","onDelete","ShowTodo","todoList","useSelector","state","todos","TodoList","map","data","index","deleteTodo","completeTask","maxWidth","columnWidth","duration","gutterWidth","gutterHeight","easing","easings","cubicOut","appearDelay","appear","transitions","appeared","enter","entered","leaved","list","App","styles","Boolean","window","location","hostname","action","concat","filter","item","findIndex","newArray","reducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b73e9fc0.chunk.js","sourcesContent":["var id = 0\n\nconst classNameHolder = [\n    \"#fffbdf\",\n    \"#c6ffc1\",\n    \"#caf7e3\",\n    \"#edffec\",\n    \"#f6dfeb\",\n    \"#e4fbff\",\n    \"#d3f6f3\",\n    \"#ffcb91\",\n    \"#ffefa1\",\n    \"#f4f9f9\",\n    \"#f1d1d0\",\n    \"#ffeebb\",\n    \"#dbe9b7\",\n    \"#defcfc\",\n    \"#ffe6eb\",\n    \"#f3f8ff\"\n]\n\nexport const addTodo = (task) =>{  \n    var today = new Date() \n    var bgColor = classNameHolder[Math.floor(Math.random() * classNameHolder.length)]\n    return({\n        type: \"ADD_TODO\",\n        payload: {\n            ID: ++id,\n            task: task,\n            completed: false,\n            time: today.toLocaleTimeString('en-US', {hour12 : true, hour: '2-digit', minute: '2-digit'}),\n            date: today.toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'}),\n            bgcolor: bgColor,\n        }\n    })\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Divider,\n    Grow,\n    IconButton,\n    InputBase,\n    Paper,\n    Tooltip,\n    Zoom,\n}from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/ClearRounded';\nimport AddIcon from '@material-ui/icons/AddCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n    borderColor: \"#945fe2\",\n    border: '1px solid',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport const InputField = (props) =>{\n\n  const [checked, setChecked] = React.useState(false);\n\n  React.useEffect(() => {\n    setChecked(true)\n  }, [checked])\n\n  const classes = useStyles();\n\n  //task STATE TO GET NEW TASK THIS WILL UPDATE ON STORE;\n  const [ task, setTask ] = React.useState('')  \n\n  //isValid STATE IS USED TO VALIDATE INPUT TASK;\n  //ENABLE [Add Task] BUTTON; and [CLEAR BUTTON]\n  const [ isValid, setValid ] = React.useState(false)\n\n  //Handling onChange \n  //HERE VALIDATE THE INPUT ENTERED IN INPUT FIELD;\n  //UPDATE BOTH STATES;\n  const validate = (event) =>{\n    //GETTING VALUE OF INPUT FIELD;\n    const value = event.target.value;\n    //IF VALUE IS NOT EMPTY -> SET isValid STATE FALSE;\n    var regex = /^\\s*$/\n\n    if(isNaN(value) && value !== '' && value.match(regex)==null){\n        setValid(true)\n    }else setValid(false)\n    //UPDATING TASK STATE;\n    setTask(value)\n  }\n\n  const handleClear = () =>{\n    setTask('')\n    setValid(false)\n  }\n\n  const handleSubmit = (e,task) =>{\n    setValid(false)\n    const isSuccess = props.onSubmit(task)\n    if(isSuccess){\n      setTask('')\n    }else setValid(true)\n    e.preventDefault()\n  }\n\n\n  return (\n\n    <Grow\n        in={checked}\n        style={{ transformOrigin: '0 0 0' }}\n        {...(checked ? { timeout: 1000 } : {})}\n      >\n    <Paper  elevation={3}  className={classes.root}>\n      <InputBase\n        type=\"text\"\n        id=\"task-input\" \n        label=\"Add New Task\" \n        className={classes.input}\n        placeholder=\"Add New Task\"\n        inputProps={{ 'aria-label': 'add new task' }}\n        onChange={(e) => validate(e)}\n        value={task}\n      />\n      {isValid ?\n      <Tooltip TransitionComponent={Zoom} title=\"Clear\" aria-label=\"clear\" arrow>\n        <IconButton onClick={(e) => handleClear()} className={classes.iconButton} aria-label=\"clear\">\n          <ClearIcon />\n        </IconButton>\n      </Tooltip>\n      : '' }\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <Tooltip TransitionComponent={Zoom} title=\"Add Task\" aria-label=\"add\" arrow>\n        <IconButton \n          type=\"submit\"\n          color=\"primary\" \n          className={classes.iconButton} \n          aria-label=\"add\"\n          disabled={!isValid}\n          onClick={(e) => handleSubmit(e,task)}//CALL DISPATCH METHOD  \n        >\n          <AddIcon fontSize=\"large\"/>\n        </IconButton>\n      </Tooltip>\n    </Paper>\n    </Grow>\n  );\n  }\n\n  export default InputField","import React from 'react';\nimport {  addTodo  } from '../../actions/addTodo'\nimport { useDispatch } from 'react-redux';\nimport {Alert} from '@material-ui/lab';\nimport { Button, Container, makeStyles, Snackbar, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport {InputField} from '../../components';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n//AddTodo() METHOD IS DEFINED TO ADD NEW TASK IN TODO LIST;\nconst AddTodo = () =>{\n    //MATERIAL UI CLASSES\n    const classes = useStyles();\n\n    //GET DISPATCH METHOD\n    const dispatch = useDispatch()\n\n    //FOR ALERT SUCCESS\n    const [success, setSuccess] = React.useState(false)\n\n    //Error\n    const [error, setError] = React.useState('')\n\n    //HANDLING ADD TASK \n    const handleOnSubmit = (task) =>{\n        try{\n            dispatch(addTodo(task))\n            setSuccess(true)\n            return true\n        }catch(err){\n            setError(err)\n            return false\n        }\n    }\n    \n    //ALERT CLOSE HANDLE\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setError('')\n        setSuccess(false);\n      };\n\n    return(\n        <Container component=\"form\" >\n\n            <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal:'center' }} open={true}>   \n                <InputField onSubmit={(task) => handleOnSubmit(task)} />\n            </Snackbar>\n\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal:'center' }} open={success} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    Task Added Successfully!\n                </Alert>\n            </Snackbar>\n\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal:'center' }} open={isNaN(error)} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    {error}\n                </Alert>\n            </Snackbar>\n            \n        </Container>\n    )\n}\n\nexport default AddTodo;","import { \n    Button,\n    Card, \n    CardActions, \n    CardHeader,\n    makeStyles, \n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/RadioButtonUncheckedRounded';\nimport CompleteIcon from '@material-ui/icons/CheckCircleRounded';\nimport React from 'react';\nimport style from './Todo.module.css';\n\nconst useStyles = makeStyles((themes) =>({\n    card:{\n        minWidth: 300,\n    }\n}))\n\nconst Todo = props =>{\n\n    const classes = useStyles()\n\n    const onDelete = (e, key) =>{\n        props.onDelete(e, key)\n    }\n\n    const onComplete = (e, key) =>{\n        props.onComplete(e, key)\n    }\n\n    return(\n        <Card variant=\"outlined\" style={{background:props.bgColor}}>\n            <CardHeader \n                title={props.task}\n                subheader={props.time}\n            />\n            <CardActions>\n                {!props.completed ?\n                    <Button\n                        size=\"small\" color=\"primary\" \n                        aria-label=\"complete\"\n                        onClick={(e) => onComplete(e)}\n                    >\n                        MARK AS COMPLETE\n                    </Button> \n                :\n                    <Button \n                        size=\"small\" color=\"#00f\"\n                        aria-label=\"complete\"\n                    >\n                        COMPLETED\n                    </Button>\n                }\n                <Button \n                    size=\"small\"\n                    color=\"secondary\" \n                    aria-label=\"delete\"\n                    onClick={(e) => onDelete(e)}\n                >\n                    DELETE\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Todo","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTodo } from '../../actions/deleteTodo';\nimport { completeTask } from '../../actions/completeTask';\nimport { \n    Container, \n    Snackbar \n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport StackGrid, { easings, transitions } from 'react-stack-grid';\n\nconst ShowTodo = () =>{\n    \n    //GETTING TODOS FROM STORE\n    const todoList = useSelector(state => state.todos)\n\n    //STATE FOR ALERT SUCCESS\n    const [success, setSuccess] = React.useState(false)\n\n    const dispatch = useDispatch()\n\n    //DELETE TODO METHOD\n    const onDelete = (ID) =>{\n        dispatch(deleteTodo(ID))\n        setSuccess(true)\n    }\n\n    //ALERT CLOSING METHOD\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return\n        }\n    \n        setSuccess(false)\n      }\n\n    const TodoList = todoList.map((data, index) => \n            <Todo \n                key={index}\n                task={data.task} \n                time={data.date + \" \" + data.time} \n                bgColor={data.bgcolor}\n                completed={data.completed}\n                onDelete={() => onDelete(data.ID)}\n                onComplete={() => dispatch(completeTask(data.ID))}\n            />\n        )\n\n    return(\n\n        <Container  maxWidth=\"lg\" >\n            <StackGrid \n                columnWidth={280}\n                duration={600}\n                gutterWidth={15}\n                gutterHeight={15}  \n                easing={easings.cubicOut}\n                appearDelay={60}\n                appear={transitions.appear}\n                appeared={transitions.appeared}\n                enter={transitions.enter}\n                entered={transitions.entered}\n                leaved={transitions.leaved}  \n            >\n            {todoList.length>0 ? TodoList :\n                <span>Yay! No Todo</span>\n            }\n\n            </StackGrid>\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal:'center' }} open={success} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\">\n                    Task Successfully Deleted!\n                </Alert>\n            </Snackbar>\n        </Container>\n    )\n\n}\n\nexport default ShowTodo","export const deleteTodo = (id) => {\n    return({\n        type: \"DELETE_TODO\",\n        ID: id\n    })\n}","export const completeTask = (id) => {\n    return({\n        type: \"COMPLETE_TASK\",\n        ID: id\n    })\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addTodo } from './actions/addTodo'\nimport AddTodo from './app/AddTodo/AddTodo'\nimport ShowTodo from './app/ShowTodo/ShowTodo'\nimport styles from './App.css'\n\nvar list = [\n  {\n      task: \"Learn about Polymer\",\n  },\n  {\n      task: \"Watch Pluralsight course on Docker\",\n  },\n  {\n      task: \"Office Meeting\",\n  },\n  {\n      task:  \"Complete presentation prep for Aurelia presentation\",\n  },\n  {\n      task: \"Instrument creation of development environment with Puppet\",\n  },\n  {\n      task: \"Transition code base to ES6\",\n  },\n  {\n      task: \"Clean room\",\n  },\n  {\n      task: \"Get storage unit\",\n  },\n  {\n      task:  \"Analysis\",\n  },\n\n]\n\nconst App = () =>{\n\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    list.map((data) =>{\n      dispatch(addTodo(data.task))\n    })\n  }, [list])\n\n  return(\n    <div className={styles.App}>\n      <h1>Todos</h1>\n      <AddTodo />\n      <ShowTodo />\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const todos = (state = [] , action ) =>{\n    switch (action.type) {\n        //ADD NEW TASK\n        case 'ADD_TODO':\n\n            return [action.payload].concat(state)\n        //DELETE TASK\n        case 'DELETE_TODO':\n\n            return state.filter( item => item.ID !== action.ID)\n        //UPDATE TASK\n        case 'COMPLETE_TASK':\n            //GETTING INDEX TO MARK COMPLETE IN GIVEN TODO\n            const index = state.findIndex( item => item.ID === action.ID)\n            //CLOANING STATE ARRAY TO ANOTHER ARRAY\n            const newArray = [...state]\n            //CHANGING VALUE OF GIVEN TODO'S \n            newArray[index].completed = true\n            return newArray\n    \n        default:\n            return state;\n    }\n}\n\nexport default todos","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst reducers = combineReducers({todos})\n\nexport default reducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\n\n//REDUX STORE -> HOLDS ALL STATES\nconst store = createStore(\n          reducers,\n          window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__1FLU_\"};"],"sourceRoot":""}